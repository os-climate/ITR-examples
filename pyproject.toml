[project]
name = "ITR-examples"
version = "v1.0.4"
description = "Example code and user interface for the ITR project."
authors = [
  { name = "Michael Tiemann", email = "72577720+MichaelTiemannOSC@users.noreply.github.com" },
]
requires-python = "<3.13,>=3.9"
readme = "README.md"
license = { text = "Apache-2.0" }
keywords = ["Climate", "ITR", "Finance"]
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.9",
  "Topic :: Office/Business :: Financial",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development",
]
dependencies = [
  "ITR",
  "pip>=23.3.1",
  "dash==2.14.1",
  "dash-bootstrap-components==1.4.2",
  "diskcache==5.6.1",
  "flask==2.2.5",
  "jupyterlab==4.0.4",
  "kaleido==0.2.1",
  "matplotlib==3.7.2",
  "multiprocess==0.70.14",
]

[project.scripts]
itr-ui = "ITR_examples.ITR_UI:main"

[project.urls]
Homepage = "https://github.com/os-climate/ITR-examples"
Repository = "https://github.com/os-climate/ITR-examples"
Downloads = "https://github.com/os-climate/ITR-examples/releases"
"Bug Tracker" = "https://github.com/os-climate/ITR-examples/issues"
Documentation = "https://github.com/os-climate/ITR-examples/tree/main/docs"
"Source Code" = "https://github.com/os-climate/ITR-examples"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.isort]
profile = "black"

[tool.pdm.scripts]
pre_release = "scripts/dev-versioning.sh"
release = "scripts/release-versioning.sh"
test = "pytest"
tox = "tox"
docs = { shell = "cd docs && mkdocs serve", help = "Start the dev server for doc preview" }
lint = "pre-commit run --all-files"
complete = { call = "tasks.complete:main", help = "Create autocomplete files for bash and fish" }

[tool.pdm.dev-dependencies]
test = ["pdm[pytest]", "pytest-cov"]
tox = ["tox", "tox-pdm>=0.5"]
docs = ["sphinx>=7.2.6", "sphinx-copybutton>=0.5.2"]
dev = ["tox>=4.11.3", "tox-pdm>=0.7.0"]

[tool.pytest.ini_options]
testpaths = ["test/"]

[tool.black]
line-length = 120
